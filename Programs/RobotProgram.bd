big main() << -(-0)
	small rots << whereRotate(compass),
	until rots do
		check rots > 0 do
			rl,
			rots << rots - 1.
		,
		check rots < 0 do
			rr,
			rots << rots + 1.
		.
	,

	big counter << -(-0), 
	small sonarResult << 0,
	small isNeedBreak << +0,
	
	big index << 40000,
	
	until index do
		index << index - 1,
		sonarResult << sonar,
		isNeedBreak << +0,
		check invert(getBit(sonarResult 2)) do
			check counter > 0 do
				rr,
				counter << counter - 1,
				isNeedBreak << -16.
			.
		,

		check invert((getBit(sonarResult 0) + isNeedBreak)) do
			go,
			isNeedBreak << -16.
		,

		check isNeedBreak >= 0 do
			rl,
			counter << counter + 1,
			isNeedBreak << -16.
		.
	,
return -1.
		

tiny invert(tiny bit << 0) << 0
	check bit do
		return 0.
	,
return 1.

small getBit(small a << 0 small number << 0) << 0
	check number < 0 do
		retutn -1.
	,
	check number >= 5 do
		retutn -1.
	,
	until number > 0 do
		a << a / 2,
		number << number -1.
	,
return isEvenSmall(a).
	

tiny isEvenSmall(small number << 0) << 0
		check number >= 16 do
			number << number - 16.
		,
		check number >= 8 do
			number << number - 8.
		,
		check number >= 4 do
			number << number - 4.
		,
		check number >= 2 do
			number << number - 2.
		,
		
		check number = 1 do
			return 1.
		,
		return 0.
		
normal minToDeg(big min << +0) << +0
	return min / 60.

small whereRotate(big min << 0)	<< +0
	small udeg << minToDeg(+min),
	small rots << 0,
	
	until udeg >= 60 do
		rots << rots + 1,
		udeg << udeg - 60.
	,
	check min >= 0 do
		return rots.
	,
	check min < 0 do
		return -rots.
	.
	